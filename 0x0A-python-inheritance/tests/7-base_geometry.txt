=======================
Module: 7-base_geometry
=======================

``BaseGeometry`` is a class with an `area()` and
`integer_validator` public instance methods.

Import
======

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Types
=====

`name` must be an integer and both arguments are required

::

    >>> bg = BaseGeometry()
    >>> print(bg.__doc__)
     BaseGeometry class 

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("my_int", 12)

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("width", 89)

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", "John")
    Traceback (most recent call last):
    TypeError: name must be an integer

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name")
    Traceback (most recent call last):
    TypeError: integer_validator() missing 1 required positional argument: 'value'

    >>> bg = BaseGeometry()
    >>> bg.integer_validator()
    Traceback (most recent call last):
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", 3, 3)
    Traceback (most recent call last):
    TypeError: integer_validator() takes 3 positional arguments but 4 were given


Values
======

`name` must be greater than 0

::

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("age", 0)
    Traceback (most recent call last):
    ValueError: age must be greater than 0

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("distance", -3)
    Traceback (most recent call last):
    ValueError: distance must be greater than 0
